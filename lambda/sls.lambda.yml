service: ${env:PROJECT_NAME}-lambda
useDotenv: true

provider:
  apiGateway: { shouldStartNameWithService: true }
  name: aws
  region: ${env:REGION}
  runtime: python3.7
  stage: ${env:STAGE,dev}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ecs:RunTask
      Resource: arn:aws:ecs:ca-central-1:268897920616:task-definition/fargoat-ecs-dev-taskDefinition0
        # Fn::Join:
        #     - ''
        #     - - arn:aws:ecs:${self:provider.region}
        #       - :${file(./build-vars.json):accountId} # Why does js not work here?
        #       - :task-definition/${env:PROJECT_NAME}
        #       - -ecs-${${self:provider.region}-taskDefinition0
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource: arn:aws:iam::268897920616:role/ecsTaskExecutionRole

plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements
  - serverless-wsgi

custom:
  wsgi:
    app: src/app.app
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux

functions:
  function0:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

outputs:
    OA:
      Fn::Join:
        - ''
        - - arn:aws:ecs:${self:provider.region}
          - :${file(./build-vars.json):accountId} # Why does js not work here?
          - :task-definition/${env:PROJECT_NAME}
          - -ecs-${${self:provider.region}-taskDefinition0
