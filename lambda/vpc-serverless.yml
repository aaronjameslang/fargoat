service: ${env:PROJECT_NAME}-vpc
useDotenv: true

provider:
  name: aws
  region: ${env:REGION}
  stage: ${env:STAGE,dev}

resources:
  Resources:
    VPC0:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 192.168.0.0/24
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}-vpc0
          - Key: project
            Value: ${self:service}
    Subnet0:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: 192.168.0.0/24
        MapPublicIpOnLaunch: true # Required for outgoing HTTP?
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}-subnet0
          - Key: project
            Value: ${self:service}
        VpcId: !Ref VPC0
    InternetGateway0:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: ${self:service}-${self:provider.stage}-igw0
          - Key: project
            Value: ${self:service}
    VPCGatewayAttachment0:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref VPC0
        InternetGatewayId: !Ref InternetGateway0
    RouteTable0:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref VPC0
    Route0:
      Type: AWS::EC2::Route
      Properties:
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref InternetGateway0
        RouteTableId: !Ref RouteTable0
    SubnetRouteTableAssociation0:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref RouteTable0
        SubnetId: !Ref Subnet0
  Outputs:
    Subnet0Id:
      Value: !Ref Subnet0
