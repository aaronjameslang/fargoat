service: ${env:PROJECT_NAME}-ecs
useDotenv: true

provider:
  name: aws
  region: ${env:REGION}
  stage: ${env:STAGE,dev}

resources:
  Resources:
    Repo0:
      Type: AWS::ECR::Repository
      Properties:
        ImageScanningConfiguration: { scanOnPush: true }
        ImageTagMutability: IMMUTABLE
        RepositoryName: ${self:service}-${self:provider.stage}
        # RepositoryPolicyText: # Needed for non-root push image
        Tags:
          - Key: project
            Value: ${self:service}
    Cluster0:
      Type: AWS::ECS::Cluster
      Properties:
        CapacityProviders: [FARGATE]
        ClusterName: ${self:service}-${self:provider.stage}-cluster0
        ClusterSettings:
          - Name: containerInsights
            Value: enabled
        Tags:
          - Key: project
            Value: ${self:service}
    TaskDefinition0:
      Type: AWS::ECS::TaskDefinition
      Properties:
        ContainerDefinitions:
          - Image: ${file(./build-vars.js):ecrImgUri}
            LogConfiguration:
              LogDriver: 'awslogs'
              Options:
                awslogs-group:  ${self:service}-${self:provider.stage}
                awslogs-region: ${self:provider.region}
                awslogs-stream-prefix: ${self:service}-${self:provider.stage}
            Name: container0
            PortMappings:
              - ContainerPort: 5000
                HostPort: 5000
                Protocol: TCP
        Cpu: 256
        # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html#create-task-execution-role
        ExecutionRoleArn: arn:aws:iam::${file(./build-vars.js):accountId}:role/ecsTaskExecutionRole
        Family: ${self:service}-${self:provider.stage}-taskDefinition0
        Memory: 512
        NetworkMode: awsvpc
        RequiresCompatibilities: [FARGATE]
        Tags:
          - Key: project
            Value: ${self:service}
    LogGroup0:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: ${self:service}-${self:provider.stage}
